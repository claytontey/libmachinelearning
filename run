#!/bin/bash

#P1: input directory with datasets
#P2: percentage for the training set size [0,1]
#P3: percentage for the test set size [0,1]
#P4: normalize features? 1 - Yes  0 - No
#P5: running times

for file in $1*.opf
do
	echo $file

	for ((it = 1; it <= $5; it++))
	do
		clear

		#generating sets *****
		opf_split $file $2 0 $3 $4

		#converting sets to LibSVM format *****
		./opf2svm training.dat training.svm
		./opf2svm testing.dat testing.svm
		cp training.svm training.svm.no-kernel
		cp testing.svm testing.svm.no-kernel
		cp training.svm training.svm.linear
		cp testing.svm testing.svm.linear
		cp training.svm training.svm.sigmoid-kernel
		cp testing.svm testing.svm.sigmoid-kernel

		#converting sets to LASVM format *****
		./opf2lasvm training.dat training.lasvm
		./opf2lasvm testing.dat testing.lasvm

		#converting sets to SVMTorch format *****
		./opf2svmtorch training.dat training.svmtorch
		./opf2svmtorch testing.dat testing.svmtorch

		#converting sets to FANN format *****
		./opf2ann training.dat training.ann
		./opf2ann testing.dat testing.ann

		#executing OPF *****
		opf_train training.dat
		opf_accuracy training.dat
		opf_classify testing.dat
		opf_accuracy testing.dat

		#executing SVM with RBF kernel *****
		./mysvm training.svm testing.svm 2
		cp testing.dat testing.svm
		mv testing.svm.predict testing.svm.out
		opf_accuracy testing.svm

		#executing SVM with no kernel *****
		./mysvm training.svm.no-kernel testing.svm.no-kernel -1
		cp testing.dat testing.svm.no-kernel
		mv testing.svm.no-kernel.predict testing.svm.no-kernel.out
		opf_accuracy testing.svm.no-kernel

		#executing SVM with linear kernel *****
		./mysvm training.svm.linear testing.svm.linear 0
		cp testing.dat testing.svm.linear
		mv testing.svm.linear.predict testing.svm.linear.out
		opf_accuracy testing.svm.linear

	        #executing SVM with sigmoid kernel *****
		./mysvm training.svm.sigmoid-kernel testing.svm.sigmoid-kernel 3
		cp testing.dat testing.svm.sigmoid-kernel
		mv testing.svm.sigmoid-kernel.predict testing.svm.sigmoid-kernel.out
		opf_accuracy testing.svm.sigmoid-kernel

		#executing LASVM with RBF kernel *****
		./lasvm-source/la_svm training.lasvm
		./lasvm-source/la_test -B 0 testing.lasvm training.lasvm.model testing.lasvm.out
		cp testing.dat testing.lasvm
		opf_accuracy testing.lasvm

		#executing SVMTorch with RBF kernel *****
		#SVMTorch for binary problems
		#./SVMTorch/SVMTorch training.svmtorch training.svmtorch.modeltorch
		#./SVMTorch/SVMTest -oa testing.svmtorch.out training.svmtorch.modeltorch testing.svmtorch
		#cp testing.dat testing.testing.svmtorch
		#opf_accuracy testing.svmtorch

		#SVMTorch for multiclass problems
		#./SVMTorch/SVMTorch -multi training.svmtorch training.svmtorch.modeltorch
		#./SVMTorch/SVMTest -multi -oa testing.svmtorch.out training.svmtorch.modeltorch testing.svmtorch
		#cp testing.dat testing.testing.svmtorch
		#opf_accuracy testing.svmtorch

		#executing ANN-MLP *****
		./ann-mlp training.ann testing.ann
		cp testing.dat testing.ann
		mv testing.ann.predict testing.ann.out
		opf_accuracy testing.ann

		#executing SOM (Kohonen)
		cp training.dat training.som
		cp testing.dat testing.som
		./kohonen training.som testing.som 5 10
		mv testing.som.predict testing.som.out
		opf_accuracy testing.som

		#executing k-NN
		cp training.dat training.knn
		cp testing.dat testing.knn
		./knn training.knn testing.knn
		mv testing.knn.predict testing.knn.out
		opf_accuracy testing.knn

		#executing Bayes
		cp training.dat training.bay
		cp testing.dat testing.bay
		./bayes training.bay testing.bay
		mv testing.bay.predict testing.bay.out
		opf_accuracy testing.bay

		rm *.opf *.svm  *.model *.out *.no-kernel *.ann *.som *.knn *.lasvm *.sigmoid-kernel *.bay *.svmtorch *.modeltorch*

		sleep 2
	done

	./statistics testing.dat.acc training.dat.time testing.dat.time $file.opf.stt $5
	./statistics testing.svm.acc training.svm.time testing.svm.time $file.svm.stt $5
	./statistics testing.svm.no-kernel.acc training.svm.no-kernel.time testing.svm.no-kernel.time $file.svm.no-kernel.stt $5
	./statistics testing.svm.linear.acc training.svm.linear.time testing.svm.linear.time $file.svm.linear.stt $5
	./statistics testing.svm.sigmoid-kernel.acc training.svm.sigmoid-kernel.time testing.svm.sigmoid-kernel.time $file.svm.sigmoid-kernel.stt $5
	./statistics testing.lasvm.acc training.lasvm.time testing.lasvm.time $file.lasvm.stt $5
	./statistics testing.svmtorch.acc training.svmtorch.time testing.svmtorch.time $file.svmtorch.stt $5
	./statistics testing.ann.acc training.ann.time testing.ann.time $file.ann.stt $5
	./statistics testing.som.acc training.som.time testing.som.time $file.som.stt $5
	./statistics testing.knn.acc training.knn.time testing.knn.time $file.knn.stt $5
	./statistics testing.bay.acc training.bay.time testing.bay.time $file.bay.stt $5

	rm *.time *.acc

done
